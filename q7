#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

// Function to perform frequency analysis on the ciphertext
char findPossibleE(const char ciphertext[]) {
    int frequency[ALPHABET_SIZE] = {0};

    // Calculate the frequency of each character in the ciphertext
    int i;
    for ( i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char currentChar = toupper(ciphertext[i]);
            frequency[currentChar - 'A']++;
        }
    }

    // Find the character with the highest frequency
    int maxFrequency = 0;
    char possibleE = '\0';
    
    
    
    for ( i = 0; i < ALPHABET_SIZE; i++) {
        if (frequency[i] > maxFrequency) {
            maxFrequency = frequency[i];
            possibleE = 'A' + i;
        }
    }

    return possibleE;
}

int main() {
    char ciphertext[100];

    printf("Enter the ciphertext: ");
    fgets(ciphertext, sizeof(ciphertext), stdin);

    // Remove newline character
    ciphertext[strcspn(ciphertext, "\n")] = '\0';

    // Find a character that potentially corresponds to 'e'
    char potentialE = findPossibleE(ciphertext);

    if (potentialE != '\0') {
        printf("A character that might decode to 'e': %c\n", potentialE);
    } else {
        printf("No likely character corresponding to 'e' found in the ciphertext.\n");
    }

    return 0;
}

 #include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

// Function to encrypt the plaintext using the Playfair cipher
void playfairEncrypt(const char plaintext[], const char matrix[][SIZE]) {
    int len = strlen(plaintext);
    char encrypted[len * 2]; // To hold the encrypted text (doubled in size to account for possible additional characters)

    int index = 0,i;
    for ( i = 0; i < len; i += 2) {
        char a = plaintext[i];
        char b = (i + 1 < len) ? plaintext[i + 1] : 'X'; // Pad 'X' if plaintext has odd length

        int row1 = -1, col1 = -1, row2 = -1, col2 = -1,r,c;
        
        // Find positions of characters 'a' and 'b' in the matrix
        for ( r = 0; r < SIZE; r++) {
            for (c = 0; c < SIZE; c++) {
                if (matrix[r][c] == a || (a == 'J' && matrix[r][c] == 'I')) {
                    row1 = r;
                    col1 = c;
                }
                if (matrix[r][c] == b || (b == 'J' && matrix[r][c] == 'I')) {
                    row2 = r;
                    col2 = c;
                }
            }
        }

        // Same row, shift columns
        if (row1 == row2) {
            encrypted[index++] = matrix[row1][(col1 + 1) % SIZE];
            encrypted[index++] = matrix[row2][(col2 + 1) % SIZE];
        }
        // Same column, shift rows
        else if (col1 == col2) {
            encrypted[index++] = matrix[(row1 + 1) % SIZE][col1];
            encrypted[index++] = matrix[(row2 + 1) % SIZE][col2];
        }
        // Forming rectangle, swap columns
        else {
            encrypted[index++] = matrix[row1][col2];
            encrypted[index++] = matrix[row2][col1];
        }
    }

    encrypted[index] = '\0';
    printf("Encrypted text: %s\n", encrypted);
}

int main() {
    const char matrix[SIZE][SIZE] = {
        {'M', 'F', 'H', 'I', 'K'}, 
        {'U', 'N', 'O', 'P', 'Q'}, 
        {'Z', 'V', 'W', 'X', 'Y'}, 
        {'E', 'L', 'A', 'R', 'G'}, 
        {'D', 'S', 'T', 'B', 'C'}
    };

    char plaintext[] = "Must see you over Cadogan West. Coming at once.";
    
    // Remove spaces and punctuation, convert to uppercase
    int len = strlen(plaintext),i;
    for (i = 0; i < len; i++) {
        if (!isalpha(plaintext[i])) {
            memmove(&plaintext[i], &plaintext[i + 1], len - i);
            len--;
            i--;
        } else {
            plaintext[i] = toupper(plaintext[i]);
            if (plaintext[i] == 'J') plaintext[i] = 'I'; // Consider 'J' as 'I' for Playfair
        }
    }
    
    // Encrypt the plaintext using the provided Playfair matrix
    playfairEncrypt(plaintext, matrix);

    return 0;
}

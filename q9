#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

// Function to decrypt the Playfair cipher message
void playfairDecrypt(const char message[], const char key[]) {
    char matrix[SIZE][SIZE];
    int keyLen = strlen(key);
    int row, col, count = 0;

    // Initialize the Playfair matrix based on the provided key
    for (row = 0; row < SIZE; row++) {
        for (col = 0; col < SIZE; col++) {
            matrix[row][col] = key[count++];
        }
    }

    int len = strlen(message);
    int index = 0;

    // Decrypt the Playfair-encoded message
    while (index < len) {
        char a = message[index++];
        char b = message[index++];

        if (a == ' ') {
            printf(" ");
            index--;
            continue;
        }

        int row1, col1, row2, col2;
        for (row = 0; row < SIZE; row++) {
            for (col = 0; col < SIZE; col++) {
                if (matrix[row][col] == a) {
                    row1 = row;
                    col1 = col;
                }
                if (matrix[row][col] == b) {
                    row2 = row;
                    col2 = col;
                }
            }
        }

        if (row1 == row2) {
            col1 = (col1 - 1 + SIZE) % SIZE;
            col2 = (col2 - 1 + SIZE) % SIZE;
        } else if (col1 == col2) {
            row1 = (row1 - 1 + SIZE) % SIZE;
            row2 = (row2 - 1 + SIZE) % SIZE;
        } else {
            int temp = col1;
            col1 = col2;
            col2 = temp;
        }

        printf("%c%c", matrix[row1][col1], matrix[row2][col2]);
    }
    printf("\n");
}

int main() {
    char message[] = "KXJEY UREBE ZWEHE WRYTU HEYFS KREHE GOYFI WTTTU OLKSY CAJPO BOTEI ZONTX BYBNT GONEY CUZWR GDSON SXBOU YWRHE BAAHY USEDQ";
    char key[] = "CIPHER"; // Keyword used in the Playfair cipher

    // Decrypt the Playfair encoded message
    playfairDecrypt(message, key);

    return 0;
}
